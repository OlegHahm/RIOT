From 3dfab5003d22f19d579aaa726b7aae870f8b879c Mon Sep 17 00:00:00 2001
From: Oleg Hahm <oleg@hobbykeller.org>
Date: Tue, 14 Jul 2015 19:50:55 +0200
Subject: [PATCH 05/12] Fix old style definitions

---
 drivers/common/openserial.c          | 24 ++++++------
 drivers/common/opentimers.c          |  4 +-
 kernel/openos/scheduler.c            |  4 +-
 openapps/c6t/c6t.c                   |  2 +-
 openapps/cexample/cexample.c         |  4 +-
 openapps/cinfo/cinfo.c               |  2 +-
 openapps/cleds/cleds.c               |  2 +-
 openapps/cstorm/cstorm.c             |  4 +-
 openapps/cwellknown/cwellknown.c     |  2 +-
 openapps/rrt/rrt.c                   |  2 +-
 openapps/techo/techo.c               |  6 +--
 openapps/tohlone/tohlone.c           |  8 ++--
 openapps/uecho/uecho.c               |  4 +-
 openapps/uinject/uinject.c           |  4 +-
 openstack/02a-MAClow/IEEE802154E.c   | 71 +++++++++++++++++-------------------
 openstack/02a-MAClow/adaptive_sync.c |  6 +--
 openstack/02b-MAChigh/neighbors.c    | 12 +++---
 openstack/02b-MAChigh/schedule.c     | 30 +++++++--------
 openstack/02b-MAChigh/sixtop.c       | 14 +++----
 openstack/03a-IPHC/iphc.c            |  2 +-
 openstack/03a-IPHC/openbridge.c      |  4 +-
 openstack/03b-IPv6/forwarding.c      |  2 +-
 openstack/03b-IPv6/icmpv6.c          |  2 +-
 openstack/03b-IPv6/icmpv6echo.c      |  4 +-
 openstack/03b-IPv6/icmpv6rpl.c       | 12 +++---
 openstack/04-TRAN/opencoap.c         |  2 +-
 openstack/04-TRAN/opentcp.c          |  6 +--
 openstack/04-TRAN/openudp.c          |  4 +-
 openstack/cross-layers/idmanager.c   |  8 ++--
 openstack/cross-layers/openqueue.c   | 10 ++---
 openstack/cross-layers/openrandom.c  |  4 +-
 31 files changed, 131 insertions(+), 134 deletions(-)

diff --git a/drivers/common/openserial.c b/drivers/common/openserial.c
index 8363e04..140dd70 100644
--- a/drivers/common/openserial.c
+++ b/drivers/common/openserial.c
@@ -56,7 +56,7 @@ void inputHdlcClose(void);
 
 //=========================== public ==========================================
 
-void openserial_init() {
+void openserial_init(void) {
    uint16_t crc;
    
    // reset variable
@@ -238,7 +238,7 @@ void openserial_board_reset_cb(opentimer_id_t id) {
    board_reset();
 }
 
-uint8_t openserial_getNumDataBytes() {
+uint8_t openserial_getNumDataBytes(void) {
    uint8_t inputBufFill;
    INTERRUPT_DECLARATION();
    
@@ -271,7 +271,7 @@ uint8_t openserial_getInputBuffer(uint8_t* bufferToWrite, uint8_t maxNumBytes) {
    return numBytesWritten;
 }
 
-void openserial_startInput() {
+void openserial_startInput(void) {
    INTERRUPT_DECLARATION();
    
    if (openserial_vars.inputBufFill>0) {
@@ -303,7 +303,7 @@ void openserial_startInput() {
    ENABLE_INTERRUPTS();
 }
 
-void openserial_startOutput() {
+void openserial_startOutput(void) {
    //schedule a task to get new status in the output buffer
    uint8_t debugPrintCounter;
    
@@ -387,7 +387,7 @@ void openserial_startOutput() {
    ENABLE_INTERRUPTS();
 }
 
-void openserial_stop() {
+void openserial_stop(void) {
    uint8_t inputBufFill;
    uint8_t cmdByte;
    bool busyReceiving;
@@ -572,7 +572,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_outBufferIndexes() {
+bool debugPrint_outBufferIndexes(void) {
    uint16_t temp_buffer[2];
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
@@ -590,7 +590,7 @@ bool debugPrint_outBufferIndexes() {
 /**
 \brief Start an HDLC frame in the output buffer.
 */
-port_INLINE void outputHdlcOpen() {
+port_INLINE void outputHdlcOpen(void) {
    // initialize the value of the CRC
    openserial_vars.outputCrc                          = HDLC_CRCINIT;
    
@@ -616,7 +616,7 @@ port_INLINE void outputHdlcWrite(uint8_t b) {
 /**
 \brief Finalize the outgoing HDLC frame.
 */
-port_INLINE void outputHdlcClose() {
+port_INLINE void outputHdlcClose(void) {
    uint16_t   finalCrc;
     
    // finalize the calculation of the CRC
@@ -635,7 +635,7 @@ port_INLINE void outputHdlcClose() {
 /**
 \brief Start an HDLC frame in the input buffer.
 */
-port_INLINE void inputHdlcOpen() {
+port_INLINE void inputHdlcOpen(void) {
    // reset the input buffer index
    openserial_vars.inputBufFill                       = 0;
    
@@ -665,7 +665,7 @@ port_INLINE void inputHdlcWrite(uint8_t b) {
 /**
 \brief Finalize the incoming HDLC frame.
 */
-port_INLINE void inputHdlcClose() {
+port_INLINE void inputHdlcClose(void) {
    
    // verify the validity of the frame
    if (openserial_vars.inputCrc==HDLC_CRCGOOD) {
@@ -684,7 +684,7 @@ port_INLINE void inputHdlcClose() {
 //=========================== interrupt handlers ==============================
 
 //executed in ISR, called from scheduler.c
-void isr_openserial_tx() {
+void isr_openserial_tx(void) {
    switch (openserial_vars.mode) {
       case MODE_INPUT:
          openserial_vars.reqFrameIdx++;
@@ -707,7 +707,7 @@ void isr_openserial_tx() {
 }
 
 // executed in ISR, called from scheduler.c
-void isr_openserial_rx() {
+void isr_openserial_rx(void) {
    uint8_t rxbyte;
    uint8_t inputBufFill;
    
diff --git a/drivers/common/opentimers.c b/drivers/common/opentimers.c
index bfe17f4..bc0659e 100644
--- a/drivers/common/opentimers.c
+++ b/drivers/common/opentimers.c
@@ -30,7 +30,7 @@ void opentimers_timer_callback(void);
 
 Initializes data structures and hardware timer.
  */
-void opentimers_init(){
+void opentimers_init(void) {
    uint8_t i;
 
    // initialize local variables
@@ -196,7 +196,7 @@ This function maps the expiration event to possibly multiple timers, calls the
 corresponding callback(s), and restarts the hardware timer with the next timer
 to expire.
  */
-void opentimers_timer_callback() {
+void opentimers_timer_callback(void) {
    
    opentimer_id_t   id;
    PORT_TIMER_WIDTH min_timeout;
diff --git a/kernel/openos/scheduler.c b/kernel/openos/scheduler.c
index 9d9d0d2..05ad8eb 100644
--- a/kernel/openos/scheduler.c
+++ b/kernel/openos/scheduler.c
@@ -21,7 +21,7 @@ void consumeTask(uint8_t taskId);
 
 //=========================== public ==========================================
 
-void scheduler_init() {   
+void scheduler_init(void) {
    
    // initialization module variables
    memset(&scheduler_vars,0,sizeof(scheduler_vars_t));
@@ -31,7 +31,7 @@ void scheduler_init() {
    SCHEDULER_ENABLE_INTERRUPT();
 }
 
-void scheduler_start() {
+void scheduler_start(void) {
    taskList_item_t* pThisTask;
    while (1) {
       while(scheduler_vars.task_list!=NULL) {
diff --git a/openapps/c6t/c6t.c b/openapps/c6t/c6t.c
index 830b616..c4b964d 100644
--- a/openapps/c6t/c6t.c
+++ b/openapps/c6t/c6t.c
@@ -34,7 +34,7 @@ void    c6t_sendDone(
 
 //=========================== public ==========================================
 
-void c6t_init() {
+void c6t_init(void) {
    if(idmanager_getIsDAGroot()==TRUE) return; 
    
    // prepare the resource descriptor for the /6t path
diff --git a/openapps/cexample/cexample.c b/openapps/cexample/cexample.c
index 8f388a8..df92a8a 100644
--- a/openapps/cexample/cexample.c
+++ b/openapps/cexample/cexample.c
@@ -39,7 +39,7 @@ void    cexample_sendDone(OpenQueueEntry_t* msg,
 
 //=========================== public ==========================================
 
-void cexample_init() {
+void cexample_init(void) {
    
    // prepare the resource descriptor for the /ex path
    cexample_vars.desc.path0len             = sizeof(cexample_path0)-1;
@@ -72,7 +72,7 @@ void cexample_timer_cb(opentimer_id_t id){
    scheduler_push_task(cexample_task_cb,TASKPRIO_COAP);
 }
 
-void cexample_task_cb() {
+void cexample_task_cb(void) {
    OpenQueueEntry_t*    pkt;
    owerror_t            outcome;
    uint8_t              i;
diff --git a/openapps/cinfo/cinfo.c b/openapps/cinfo/cinfo.c
index a4ce20f..512ef8a 100644
--- a/openapps/cinfo/cinfo.c
+++ b/openapps/cinfo/cinfo.c
@@ -37,7 +37,7 @@ void          cinfo_sendDone(
 /**
 \brief Initialize this module.
 */
-void cinfo_init() {
+void cinfo_init(void) {
    // do not run if DAGroot
    if(idmanager_getIsDAGroot()==TRUE) return; 
    
diff --git a/openapps/cleds/cleds.c b/openapps/cleds/cleds.c
index 8ffb115..7edf09c 100644
--- a/openapps/cleds/cleds.c
+++ b/openapps/cleds/cleds.c
@@ -30,7 +30,7 @@ void     cleds_sendDone(
 
 //=========================== public ==========================================
 
-void cleds__init() {
+void cleds__init(void) {
    
    // prepare the resource descriptor for the /l path
    cleds_vars.desc.path0len            = sizeof(cleds_path0)-1;
diff --git a/openapps/cstorm/cstorm.c b/openapps/cstorm/cstorm.c
index 09a9039..5277247 100644
--- a/openapps/cstorm/cstorm.c
+++ b/openapps/cstorm/cstorm.c
@@ -141,11 +141,11 @@ owerror_t cstorm_receive(
 \note timer fired, but we don't want to execute task in ISR mode instead, push
    task to scheduler with CoAP priority, and let scheduler take care of it.
 */
-void cstorm_timer_cb(){
+void cstorm_timer_cb(void) {
    scheduler_push_task(cstorm_task_cb,TASKPRIO_COAP);
 }
 
-void cstorm_task_cb() {
+void cstorm_task_cb(void) {
    OpenQueueEntry_t*    pkt;
    owerror_t            outcome;
    uint8_t              numOptions;
diff --git a/openapps/cwellknown/cwellknown.c b/openapps/cwellknown/cwellknown.c
index 370b797..00d5cae 100644
--- a/openapps/cwellknown/cwellknown.c
+++ b/openapps/cwellknown/cwellknown.c
@@ -28,7 +28,7 @@ void    cwellknown_sendDone(
 
 //=========================== public ==========================================
 
-void cwellknown_init() {
+void cwellknown_init(void) {
    if(idmanager_getIsDAGroot()==TRUE) return; 
    
    // prepare the resource descriptor for the /.well-known/core path
diff --git a/openapps/rrt/rrt.c b/openapps/rrt/rrt.c
index bbbc174..e28bbb9 100644
--- a/openapps/rrt/rrt.c
+++ b/openapps/rrt/rrt.c
@@ -44,7 +44,7 @@ void rrt_sendCoAPMsg(char actionMsg, uint8_t *ipv6mote);
 /**
 \brief Initialize this module.
 */
-void rrt_init() {
+void rrt_init(void) {
    
    // do not run if DAGroot
    if(idmanager_getIsDAGroot()==TRUE) return; 
diff --git a/openapps/techo/techo.c b/openapps/techo/techo.c
index a7e314e..df3bdb3 100644
--- a/openapps/techo/techo.c
+++ b/openapps/techo/techo.c
@@ -10,10 +10,10 @@
 
 //=========================== public ==========================================
 
-void techo_init() {
+void techo_init(void) {
 }
 
-bool techo_shouldIlisten() {
+bool techo_shouldIlisten(void) {
    return TRUE;
 }
 
@@ -46,7 +46,7 @@ void techo_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
 void techo_connectDone(owerror_t error) {
 }
 
-bool techo_debugPrint() {
+bool techo_debugPrint(void) {
    return FALSE;
 }
 
diff --git a/openapps/tohlone/tohlone.c b/openapps/tohlone/tohlone.c
index fdaf9ad..6136c03 100644
--- a/openapps/tohlone/tohlone.c
+++ b/openapps/tohlone/tohlone.c
@@ -18,18 +18,18 @@ bool tohlone_check4chars(uint8_t c1[4], uint8_t c2[4]);
 
 //=========================== public ==========================================
 
-void tohlone_init() {
+void tohlone_init(void) {
    tohlone_vars.httpChunk = 0;
    tohlone_vars.getRequest[0] = '/';
    tohlone_vars.getRequest[1] = ' ';
    tohlone_webpages_init();
 }
 
-bool tohlone_shouldIlisten() {
+bool tohlone_shouldIlisten(void) {
    return TRUE;
 }
 
-void tohlone_sendpkt() {
+void tohlone_sendpkt(void) {
    uint8_t buffer[TCP_DEFAULT_WINDOW_SIZE];
    uint8_t buffer_len;
   
@@ -106,7 +106,7 @@ void tohlone_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
 void tohlone_connectDone(owerror_t error) {
 }
 
-bool tohlone_debugPrint() {
+bool tohlone_debugPrint(void) {
    return FALSE;
 }
 
diff --git a/openapps/uecho/uecho.c b/openapps/uecho/uecho.c
index a8491b7..4f5151c 100644
--- a/openapps/uecho/uecho.c
+++ b/openapps/uecho/uecho.c
@@ -11,7 +11,7 @@
 
 //=========================== public ==========================================
 
-void uecho_init() {
+void uecho_init(void) {
 }
 
 void uecho_receive(OpenQueueEntry_t* request) {
@@ -56,7 +56,7 @@ void uecho_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
    openqueue_freePacketBuffer(msg);
 }
 
-bool uecho_debugPrint() {
+bool uecho_debugPrint(void) {
    return FALSE;
 }
 
diff --git a/openapps/uinject/uinject.c b/openapps/uinject/uinject.c
index 00cde29..ceb15e2 100644
--- a/openapps/uinject/uinject.c
+++ b/openapps/uinject/uinject.c
@@ -25,7 +25,7 @@ void uinject_task_cb(void);
 
 //=========================== public ==========================================
 
-void uinject_init() {
+void uinject_init(void) {
    
    // clear local variables
    memset(&uinject_vars,0,sizeof(uinject_vars_t));
@@ -65,7 +65,7 @@ void uinject_timer_cb(opentimer_id_t id){
    scheduler_push_task(uinject_task_cb,TASKPRIO_COAP);
 }
 
-void uinject_task_cb() {
+void uinject_task_cb(void) {
    OpenQueueEntry_t*    pkt;
    
    // don't run if not synch
diff --git a/openstack/02a-MAClow/IEEE802154E.c b/openstack/02a-MAClow/IEEE802154E.c
index 7b148c3..861d29e 100644
--- a/openstack/02a-MAClow/IEEE802154E.c
+++ b/openstack/02a-MAClow/IEEE802154E.c
@@ -106,7 +106,7 @@ void     isr_ieee154e_timer(void);
 Call this function once before any other function in this module, possibly
 during boot-up.
 */
-void ieee154e_init() {
+void ieee154e_init(void) {
    
    // initialize variables
    memset(&ieee154e_vars,0,sizeof(ieee154e_vars_t));
@@ -183,7 +183,7 @@ PORT_RADIOTIMER_WIDTH ieee154e_asnDiff(asn_t* someASN) {
 
 This function executes in ISR mode, when the new slot timer fires.
 */
-void isr_ieee154e_newSlot() {
+void isr_ieee154e_newSlot(void) {
    radio_setTimerPeriod(TsSlotDuration);
    if (ieee154e_vars.isSync==FALSE) {
       if (idmanager_getIsDAGroot()==TRUE) {
@@ -209,7 +209,7 @@ void isr_ieee154e_newSlot() {
 
 This function executes in ISR mode, when the FSM timer fires.
 */
-void isr_ieee154e_timer() {
+void isr_ieee154e_timer(void) {
    switch (ieee154e_vars.state) {
       case S_TXDATAOFFSET:
          activity_ti2();
@@ -376,7 +376,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_asn() {
+bool debugPrint_asn(void) {
    asn_t output;
    output.byte4         =  ieee154e_vars.asn.byte4;
    output.bytes2and3    =  ieee154e_vars.asn.bytes2and3;
@@ -393,7 +393,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_isSync() {
+bool debugPrint_isSync(void) {
    uint8_t output=0;
    output = ieee154e_vars.isSync;
    openserial_printStatus(STATUS_ISSYNC,(uint8_t*)&output,sizeof(uint8_t));
@@ -408,7 +408,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_macStats() {
+bool debugPrint_macStats(void) {
    // send current stats over serial
    openserial_printStatus(STATUS_MACSTATS,(uint8_t*)&ieee154e_stats,sizeof(ieee154e_stats_t));
    return TRUE;
@@ -418,7 +418,7 @@ bool debugPrint_macStats() {
 
 //======= SYNCHRONIZING
 
-port_INLINE void activity_synchronize_newSlot() {
+port_INLINE void activity_synchronize_newSlot(void) {
    // I'm in the middle of receiving a packet
    if (ieee154e_vars.state==S_SYNCRX) {
       return;
@@ -795,7 +795,7 @@ port_INLINE bool ieee154e_processIEs(OpenQueueEntry_t* pkt, uint16_t* lenIE) {
 
 //======= TX
 
-port_INLINE void activity_ti1ORri1() {
+port_INLINE void activity_ti1ORri1(void) {
    cellType_t  cellType;
    open_addr_t neighbor;
    uint8_t     i;
@@ -954,8 +954,7 @@ port_INLINE void activity_ti1ORri1() {
    }
 }
 
-port_INLINE void activity_ti2() {
-   
+port_INLINE void activity_ti2(void) {
    // change state
    changeState(S_TXDATAPREPARE);
 
@@ -996,7 +995,7 @@ port_INLINE void activity_ti2() {
    changeState(S_TXDATAREADY);
 }
 
-port_INLINE void activity_tie1() {
+port_INLINE void activity_tie1(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_MAXTXDATAPREPARE_OVERFLOW,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1006,7 +1005,7 @@ port_INLINE void activity_tie1() {
    endSlot();
 }
 
-port_INLINE void activity_ti3() {
+port_INLINE void activity_ti3(void) {
    // change state
    changeState(S_TXDATADELAY);
    
@@ -1017,7 +1016,7 @@ port_INLINE void activity_ti3() {
    radio_txNow();
 }
 
-port_INLINE void activity_tie2() {
+port_INLINE void activity_tie2(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_WDRADIO_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1042,7 +1041,7 @@ port_INLINE void activity_ti4(PORT_RADIOTIMER_WIDTH capturedTime) {
    radiotimer_schedule(DURATION_tt4);
 }
 
-port_INLINE void activity_tie3() {
+port_INLINE void activity_tie3(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_WDDATADURATION_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1090,7 +1089,7 @@ port_INLINE void activity_ti5(PORT_RADIOTIMER_WIDTH capturedTime) {
    }
 }
 
-port_INLINE void activity_ti6() {
+port_INLINE void activity_ti6(void) {
    // change state
    changeState(S_RXACKPREPARE);
    
@@ -1112,7 +1111,7 @@ port_INLINE void activity_ti6() {
    changeState(S_RXACKREADY);
 }
 
-port_INLINE void activity_tie4() {
+port_INLINE void activity_tie4(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_MAXRXACKPREPARE_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1122,7 +1121,7 @@ port_INLINE void activity_tie4() {
    endSlot();
 }
 
-port_INLINE void activity_ti7() {
+port_INLINE void activity_ti7(void) {
    // change state
    changeState(S_RXACKLISTEN);
    
@@ -1133,7 +1132,7 @@ port_INLINE void activity_ti7() {
    radiotimer_schedule(DURATION_tt7);
 }
 
-port_INLINE void activity_tie5() {
+port_INLINE void activity_tie5(void) {
    // indicate transmit failed to schedule to keep stats
    schedule_indicateTx(&ieee154e_vars.asn,FALSE);
    
@@ -1169,7 +1168,7 @@ port_INLINE void activity_ti8(PORT_RADIOTIMER_WIDTH capturedTime) {
    radiotimer_schedule(DURATION_tt8);
 }
 
-port_INLINE void activity_tie6() {
+port_INLINE void activity_tie6(void) {
    // abort
    endSlot();
 }
@@ -1305,7 +1304,7 @@ port_INLINE void activity_ti9(PORT_RADIOTIMER_WIDTH capturedTime) {
 
 //======= RX
 
-port_INLINE void activity_ri2() {
+port_INLINE void activity_ri2(void) {
    // change state
    changeState(S_RXDATAPREPARE);
    
@@ -1327,7 +1326,7 @@ port_INLINE void activity_ri2() {
    changeState(S_RXDATAREADY);
 }
 
-port_INLINE void activity_rie1() {
+port_INLINE void activity_rie1(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_MAXRXDATAPREPARE_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1337,7 +1336,7 @@ port_INLINE void activity_rie1() {
    endSlot();
 }
 
-port_INLINE void activity_ri3() {
+port_INLINE void activity_ri3(void) {
    // change state
    changeState(S_RXDATALISTEN);
    
@@ -1348,7 +1347,7 @@ port_INLINE void activity_ri3() {
    radiotimer_schedule(DURATION_rt3);
 }
 
-port_INLINE void activity_rie2() {
+port_INLINE void activity_rie2(void) {
    // abort
    endSlot();
 }
@@ -1370,7 +1369,7 @@ port_INLINE void activity_ri4(PORT_RADIOTIMER_WIDTH capturedTime) {
    radiotimer_schedule(DURATION_rt4);
 }
 
-port_INLINE void activity_rie3() {
+port_INLINE void activity_rie3(void) {
      
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_WDDATADURATION_OVERFLOWS,
@@ -1532,8 +1531,7 @@ port_INLINE void activity_ri5(PORT_RADIOTIMER_WIDTH capturedTime) {
    endSlot();
 }
 
-port_INLINE void activity_ri6() {
-   
+port_INLINE void activity_ri6(void) {
    // change state
    changeState(S_TXACKPREPARE);
    
@@ -1609,7 +1607,7 @@ port_INLINE void activity_ri6() {
    changeState(S_TXACKREADY);
 }
 
-port_INLINE void activity_rie4() {
+port_INLINE void activity_rie4(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_MAXTXACKPREPARE_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1619,7 +1617,7 @@ port_INLINE void activity_rie4() {
    endSlot();
 }
 
-port_INLINE void activity_ri7() {
+port_INLINE void activity_ri7(void) {
    // change state
    changeState(S_TXACKDELAY);
    
@@ -1630,7 +1628,7 @@ port_INLINE void activity_ri7() {
    radio_txNow(); 
 }
 
-port_INLINE void activity_rie5() {
+port_INLINE void activity_rie5(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_WDRADIOTX_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1654,7 +1652,7 @@ port_INLINE void activity_ri8(PORT_RADIOTIMER_WIDTH capturedTime) {
    radiotimer_schedule(DURATION_rt8);
 }
 
-port_INLINE void activity_rie6() {
+port_INLINE void activity_rie6(void) {
    // log the error
    openserial_printError(COMPONENT_IEEE802154E,ERR_WDACKDURATION_OVERFLOWS,
                          (errorparameter_t)ieee154e_vars.state,
@@ -1758,9 +1756,8 @@ port_INLINE bool isValidAck(ieee802154_header_iht* ieee802514_header, OpenQueueE
 
 //======= ASN handling
 
-port_INLINE void incrementAsnOffset() {
+port_INLINE void incrementAsnOffset(void) {
    frameLength_t frameLength;
-   
    // increment the asn
    ieee154e_vars.asn.bytes0and1++;
    if (ieee154e_vars.asn.bytes0and1==0) {
@@ -1789,7 +1786,7 @@ port_INLINE void ieee154e_getAsn(uint8_t* array) {
    array[4]         =  ieee154e_vars.asn.byte4;
 }
 
-port_INLINE uint16_t ieee154e_getTimeCorrection() {
+port_INLINE uint16_t ieee154e_getTimeCorrection(void) {
     int16_t returnVal;
     
     returnVal = (uint16_t)(ieee154e_vars.timeCorrection);
@@ -1847,7 +1844,7 @@ port_INLINE void asnStoreFromEB(uint8_t* asn) {
    ieee154e_vars.asn.byte4        =     asn[4];
 }
 
-port_INLINE void ieee154e_syncSlotOffset() {
+port_INLINE void ieee154e_syncSlotOffset(void) {
    frameLength_t frameLength;
    uint32_t slotOffset;
    
@@ -2040,7 +2037,7 @@ void notif_receive(OpenQueueEntry_t* packetReceived) {
 
 //======= stats
 
-port_INLINE void resetStats() {
+port_INLINE void resetStats(void) {
    ieee154e_stats.numSyncPkt      =    0;
    ieee154e_stats.numSyncAck      =    0;
    ieee154e_stats.minCorrection   =  127;
@@ -2151,7 +2148,7 @@ have been sent to the upper layer. Similarly, in a Tx slot, the sendDone
 function should already have been done. If this is not the case, this function
 will do that for you, but assume that something went wrong.
 */
-void endSlot() {
+void endSlot(void) {
   
    // turn off the radio
    radio_rfOff();
@@ -2233,6 +2230,6 @@ void endSlot() {
    changeState(S_SLEEP);
 }
 
-bool ieee154e_isSynch(){
+bool ieee154e_isSynch(void) {
    return ieee154e_vars.isSync;
 }
diff --git a/openstack/02a-MAClow/adaptive_sync.c b/openstack/02a-MAClow/adaptive_sync.c
index 76c4cc9..0386bcc 100644
--- a/openstack/02a-MAClow/adaptive_sync.c
+++ b/openstack/02a-MAClow/adaptive_sync.c
@@ -32,7 +32,7 @@ adaptive_sync_vars_t adaptive_sync_vars;
 /**
 \brief initial this module
 */
-void adaptive_sync_init() {
+void adaptive_sync_init(void) {
    // reset local variables
    memset(&adaptive_sync_vars,0x00,sizeof(adaptive_sync_vars_t));
    
@@ -170,7 +170,7 @@ void adaptive_sync_calculateCompensatedSlots(int16_t timeCorrection) {
 
 Once compensationTimeout == 0, extend or shorten current slot length for one tick.
 */
-void adaptive_sync_countCompensationTimeout() {
+void adaptive_sync_countCompensationTimeout(void) {
    uint16_t newSlotDuration;
    
    newSlotDuration  = TsSlotDuration;
@@ -262,7 +262,7 @@ void adaptive_sync_countCompensationTimeout_compoundSlots(uint16_t compoundSlots
 /**
 \brief set driftChanged to true.
 */
-void adaptive_sync_driftChanged() {
+void adaptive_sync_driftChanged(void) {
 #ifndef NOADAPTIVESYNC
    adaptive_sync_vars.driftChanged = TRUE;
 #endif
diff --git a/openstack/02b-MAChigh/neighbors.c b/openstack/02b-MAChigh/neighbors.c
index 9cc4e96..74df2fd 100644
--- a/openstack/02b-MAChigh/neighbors.c
+++ b/openstack/02b-MAChigh/neighbors.c
@@ -31,7 +31,7 @@ bool isThisRowMatching(
 /**
 \brief Initializes this module.
 */
-void neighbors_init() {
+void neighbors_init(void) {
    
    // clear module variables
    memset(&neighbors_vars,0,sizeof(neighbors_vars_t));
@@ -51,7 +51,7 @@ void neighbors_init() {
 
 \returns This mote's current DAG rank.
 */
-dagrank_t neighbors_getMyDAGrank() {
+dagrank_t neighbors_getMyDAGrank(void) {
    return neighbors_vars.myDAGrank;
 }
 
@@ -60,7 +60,7 @@ dagrank_t neighbors_getMyDAGrank() {
 
 \returns The number of neighbors this mote's currently knows of.
 */
-uint8_t neighbors_getNumNeighbors() {
+uint8_t neighbors_getNumNeighbors(void) {
    uint8_t i;
    uint8_t returnVal;
    
@@ -504,7 +504,7 @@ routing decisions to change. Examples are:
   very low DAGrank, I may want to change by routing parent.
 - I became a DAGroot, so my DAGrank should be 0.
 */
-void neighbors_updateMyDAGrankAndNeighborPreference() {
+void neighbors_updateMyDAGrankAndNeighborPreference(void) {
    uint8_t   i;
    uint16_t  rankIncrease;
    uint32_t  tentativeDAGrank; // 32-bit since is used to sum
@@ -563,7 +563,7 @@ void neighbors_updateMyDAGrankAndNeighborPreference() {
 
 //===== maintenance
 
-void  neighbors_removeOld() {
+void  neighbors_removeOld(void) {
    uint8_t    i;
    uint16_t   timeSinceHeard;
    
@@ -587,7 +587,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_neighbors() {
+bool debugPrint_neighbors(void) {
    debugNeighborEntry_t temp;
    neighbors_vars.debugRow=(neighbors_vars.debugRow+1)%MAXNUMNEIGHBORS;
    temp.row=neighbors_vars.debugRow;
diff --git a/openstack/02b-MAChigh/schedule.c b/openstack/02b-MAChigh/schedule.c
index 797d63b..599c599 100644
--- a/openstack/02b-MAChigh/schedule.c
+++ b/openstack/02b-MAChigh/schedule.c
@@ -23,7 +23,7 @@ void schedule_resetEntry(scheduleEntry_t* pScheduleEntry);
 
 \post Call this function before calling any other function in this module.
 */
-void schedule_init() {
+void schedule_init(void) {
    slotOffset_t    start_slotOffset;
    slotOffset_t    running_slotOffset;
    open_addr_t     temp_neighbor;
@@ -58,7 +58,7 @@ void schedule_init() {
 /**
 \brief Starting the DAGroot schedule propagation.
 */
-void schedule_startDAGroot() {
+void schedule_startDAGroot(void) {
    slotOffset_t    start_slotOffset;
    slotOffset_t    running_slotOffset;
    open_addr_t     temp_neighbor;
@@ -96,7 +96,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_schedule() {
+bool debugPrint_schedule(void) {
    debugScheduleEntry_t temp;
    
    // increment the row just printed
@@ -147,7 +147,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_backoff() {
+bool debugPrint_backoff(void) {
    uint8_t temp[2];
    
    // gather status data
@@ -252,7 +252,7 @@ void  schedule_getSlotInfo(
 
 \param[out] maximum number of active slots
 */
-uint16_t  schedule_getMaxActiveSlots() {
+uint16_t  schedule_getMaxActiveSlots(void) {
    return schedule_vars.maxActiveSlots;
 }
 
@@ -451,7 +451,7 @@ bool schedule_isSlotOffsetAvailable(uint16_t slotOffset){
    return TRUE;
 }
 
-scheduleEntry_t* schedule_statistic_poorLinkQuality(){
+scheduleEntry_t* schedule_statistic_poorLinkQuality(void) {
    scheduleEntry_t* scheduleWalker;
    
    INTERRUPT_DECLARATION();
@@ -494,7 +494,7 @@ void schedule_syncSlotOffset(slotOffset_t targetSlotOffset) {
 /**
 \brief advance to next active slot
 */
-void schedule_advanceSlot() {
+void schedule_advanceSlot(void) {
    
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
@@ -507,7 +507,7 @@ void schedule_advanceSlot() {
 /**
 \brief return slotOffset of next active slot
 */
-slotOffset_t schedule_getNextActiveSlotOffset() {
+slotOffset_t schedule_getNextActiveSlotOffset(void) {
    slotOffset_t res;   
    
    INTERRUPT_DECLARATION();
@@ -525,7 +525,7 @@ slotOffset_t schedule_getNextActiveSlotOffset() {
 
 \returns The frame length.
 */
-frameLength_t schedule_getFrameLength() {
+frameLength_t schedule_getFrameLength(void) {
    frameLength_t returnVal;
    
    INTERRUPT_DECLARATION();
@@ -543,7 +543,7 @@ frameLength_t schedule_getFrameLength() {
 
 \returns The frame handle.
 */
-uint8_t schedule_getFrameHandle() {
+uint8_t schedule_getFrameHandle(void) {
    uint8_t returnVal;
    
    INTERRUPT_DECLARATION();
@@ -561,7 +561,7 @@ uint8_t schedule_getFrameHandle() {
 
 \returns The frame number.
 */
-uint8_t schedule_getFrameNumber() {
+uint8_t schedule_getFrameNumber(void) {
    uint8_t returnVal;
    
    INTERRUPT_DECLARATION();
@@ -578,7 +578,7 @@ uint8_t schedule_getFrameNumber() {
 
 \returns The type of the current schedule entry.
 */
-cellType_t schedule_getType() {
+cellType_t schedule_getType(void) {
    cellType_t returnVal;
    
    INTERRUPT_DECLARATION();
@@ -611,7 +611,7 @@ void schedule_getNeighbor(open_addr_t* addrToWrite) {
 
 \returns The channel offset of the current schedule entry.
 */
-channelOffset_t schedule_getChannelOffset() {
+channelOffset_t schedule_getChannelOffset(void) {
    channelOffset_t returnVal;
    
    INTERRUPT_DECLARATION();
@@ -636,7 +636,7 @@ Note that the backoff counter is global, not per slot.
 
 \returns TRUE if it is OK to send on this slot, FALSE otherwise.
 */
-bool schedule_getOkToSend() {
+bool schedule_getOkToSend(void) {
    bool returnVal;
    
    INTERRUPT_DECLARATION();
@@ -670,7 +670,7 @@ bool schedule_getOkToSend() {
 /**
 \brief Reset the backoff and backoffExponent.
 */
-void schedule_resetBackoff() {
+void schedule_resetBackoff(void) {
    
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
diff --git a/openstack/02b-MAChigh/sixtop.c b/openstack/02b-MAChigh/sixtop.c
index 03eda7e..b811118 100644
--- a/openstack/02b-MAChigh/sixtop.c
+++ b/openstack/02b-MAChigh/sixtop.c
@@ -115,7 +115,7 @@ bool          sixtop_areAvailableCellsToBeScheduled(
 
 //=========================== public ==========================================
 
-void sixtop_init() {
+void sixtop_init(void) {
    
    sixtop_vars.periodMaintenance  = 872 +(openrandom_get16b()&0xff);
    sixtop_vars.busySendingKA      = FALSE;
@@ -490,7 +490,7 @@ owerror_t sixtop_send(OpenQueueEntry_t *msg) {
 
 //======= from lower layer
 
-void task_sixtopNotifSendDone() {
+void task_sixtopNotifSendDone(void) {
    OpenQueueEntry_t* msg;
    
    // get recently-sent packet from openqueue
@@ -563,7 +563,7 @@ void task_sixtopNotifSendDone() {
    }
 }
 
-void task_sixtopNotifReceive() {
+void task_sixtopNotifReceive(void) {
    OpenQueueEntry_t* msg;
    uint16_t          lenIE;
    
@@ -648,7 +648,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_myDAGrank() {
+bool debugPrint_myDAGrank(void) {
    uint16_t output;
    
    output = 0;
@@ -666,7 +666,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_kaPeriod() {
+bool debugPrint_kaPeriod(void) {
    uint16_t output;
    
    output = sixtop_vars.kaPeriod;
@@ -785,7 +785,7 @@ This is one of the MAC management tasks. This function inlines in the
 timers_res_fired() function, but is declared as a separate function for better
 readability of the code.
 */
-port_INLINE void sixtop_sendEB() {
+port_INLINE void sixtop_sendEB(void) {
    OpenQueueEntry_t* eb;
    uint8_t len;
    
@@ -862,7 +862,7 @@ This is one of the MAC management tasks. This function inlines in the
 timers_res_fired() function, but is declared as a separate function for better
 readability of the code.
 */
-port_INLINE void sixtop_sendKA() {
+port_INLINE void sixtop_sendKA(void) {
    OpenQueueEntry_t* kaPkt;
    open_addr_t*      kaNeighAddr;
    
diff --git a/openstack/03a-IPHC/iphc.c b/openstack/03a-IPHC/iphc.c
index 6b11b04..63ce4c2 100644
--- a/openstack/03a-IPHC/iphc.c
+++ b/openstack/03a-IPHC/iphc.c
@@ -47,7 +47,7 @@ void iphc_retrieveIPv6HopByHopHeader(
 
 //=========================== public ==========================================
 
-void      iphc_init() {
+void      iphc_init(void) {
 }
 
 // send from upper layer: I need to add 6LoWPAN header
diff --git a/openstack/03a-IPHC/openbridge.c b/openstack/03a-IPHC/openbridge.c
index 92a7488..361555b 100644
--- a/openstack/03a-IPHC/openbridge.c
+++ b/openstack/03a-IPHC/openbridge.c
@@ -11,10 +11,10 @@
 //=========================== prototypes ======================================
 //=========================== public ==========================================
 
-void openbridge_init() {
+void openbridge_init(void) {
 }
 
-void openbridge_triggerData() {
+void openbridge_triggerData(void) {
    uint8_t           input_buffer[136];//worst case: 8B of next hop + 128B of data
    OpenQueueEntry_t* pkt;
    uint8_t           numDataBytes;
diff --git a/openstack/03b-IPv6/forwarding.c b/openstack/03b-IPv6/forwarding.c
index 3903579..b39f48a 100644
--- a/openstack/03b-IPv6/forwarding.c
+++ b/openstack/03b-IPv6/forwarding.c
@@ -45,7 +45,7 @@ void      forwarding_createRplOption(
 /**
 \brief Initialize this module.
 */
-void forwarding_init() {
+void forwarding_init(void) {
 }
 
 /**
diff --git a/openstack/03b-IPv6/icmpv6.c b/openstack/03b-IPv6/icmpv6.c
index b895b98..ab5af97 100644
--- a/openstack/03b-IPv6/icmpv6.c
+++ b/openstack/03b-IPv6/icmpv6.c
@@ -12,7 +12,7 @@
 
 //=========================== public ==========================================
 
-void icmpv6_init() {
+void icmpv6_init(void) {
 }
 
 owerror_t icmpv6_send(OpenQueueEntry_t* msg) {
diff --git a/openstack/03b-IPv6/icmpv6echo.c b/openstack/03b-IPv6/icmpv6echo.c
index 3967969..24f8eab 100644
--- a/openstack/03b-IPv6/icmpv6echo.c
+++ b/openstack/03b-IPv6/icmpv6echo.c
@@ -14,12 +14,12 @@ icmpv6echo_vars_t icmpv6echo_vars;
 
 //=========================== public ==========================================
 
-void icmpv6echo_init() {
+void icmpv6echo_init(void) {
    icmpv6echo_vars.busySending = FALSE;
    icmpv6echo_vars.seq         = 0;
 }
 
-void icmpv6echo_trigger() {
+void icmpv6echo_trigger(void) {
    uint8_t number_bytes_from_input_buffer;
    uint8_t input_buffer[16];
    OpenQueueEntry_t* msg;
diff --git a/openstack/03b-IPv6/icmpv6rpl.c b/openstack/03b-IPv6/icmpv6rpl.c
index bd07be3..32abe20 100644
--- a/openstack/03b-IPv6/icmpv6rpl.c
+++ b/openstack/03b-IPv6/icmpv6rpl.c
@@ -31,7 +31,7 @@ void sendDAO(void);
 /**
 \brief Initialize this module.
 */
-void icmpv6rpl_init() {
+void icmpv6rpl_init(void) {
    uint8_t         dodagid[16];
    
    // retrieve my prefix and EUI64
@@ -145,7 +145,7 @@ void  icmpv6rpl_writeDODAGid(uint8_t* dodagid) {
    icmpv6rpl_vars.fDodagidWritten = 1;
 }
 
-uint8_t icmpv6rpl_getRPLIntanceID(){
+uint8_t icmpv6rpl_getRPLIntanceID(void) {
    return icmpv6rpl_vars.dao.rplinstanceId;
 }
 
@@ -257,7 +257,7 @@ void icmpv6rpl_timer_DIO_cb(opentimer_id_t id) {
 
 \note This function is executed in task context, called by the scheduler.
 */
-void icmpv6rpl_timer_DIO_task() {
+void icmpv6rpl_timer_DIO_task(void) {
       
     // send DIO
     sendDIO();
@@ -273,7 +273,7 @@ void icmpv6rpl_timer_DIO_task() {
 /**
 \brief Prepare and a send a RPL DIO.
 */
-void sendDIO() {
+void sendDIO(void) {
    OpenQueueEntry_t*    msg;
    
    // stop if I'm not sync'ed
@@ -372,7 +372,7 @@ void icmpv6rpl_timer_DAO_cb(opentimer_id_t id) {
 
 \note This function is executed in task context, called by the scheduler.
 */
-void icmpv6rpl_timer_DAO_task() {
+void icmpv6rpl_timer_DAO_task(void) {
     
    // send DAO
    sendDAO();
@@ -388,7 +388,7 @@ void icmpv6rpl_timer_DAO_task() {
 /**
 \brief Prepare and a send a RPL DAO.
 */
-void sendDAO() {
+void sendDAO(void) {
    OpenQueueEntry_t*    msg;                // pointer to DAO messages
    uint8_t              nbrIdx;             // running neighbor index
    uint8_t              numTransitParents,numTargetParents;  // the number of parents indicated in transit option
diff --git a/openstack/04-TRAN/opencoap.c b/openstack/04-TRAN/opencoap.c
index 2900023..c93496a 100644
--- a/openstack/04-TRAN/opencoap.c
+++ b/openstack/04-TRAN/opencoap.c
@@ -24,7 +24,7 @@ opencoap_vars_t opencoap_vars;
 /**
 \brief Initialize this module.
 */
-void opencoap_init() {
+void opencoap_init(void) {
    // initialize the resource linked list
    opencoap_vars.resources     = NULL;
    
diff --git a/openstack/04-TRAN/opentcp.c b/openstack/04-TRAN/opentcp.c
index 63c49d6..76b5b34 100644
--- a/openstack/04-TRAN/opentcp.c
+++ b/openstack/04-TRAN/opentcp.c
@@ -24,7 +24,7 @@ void opentcp_timer_cb(opentimer_id_t id);
 
 //=========================== public ==========================================
 
-void opentcp_init() {
+void opentcp_init(void) {
    // reset local variables
    memset(&tcp_vars,0,sizeof(tcp_vars_t));   
    // reset state machine
@@ -567,7 +567,7 @@ void opentcp_receive(OpenQueueEntry_t* msg) {
    }
 }
 
-owerror_t opentcp_close() {    //[command] teardown
+owerror_t opentcp_close(void) {    //[command] teardown
    OpenQueueEntry_t* tempPkt;
    if (  tcp_vars.state==TCP_STATE_ALMOST_CLOSE_WAIT ||
          tcp_vars.state==TCP_STATE_CLOSE_WAIT        ||
@@ -666,7 +666,7 @@ bool containsControlBits(OpenQueueEntry_t* msg, uint8_t ack, uint8_t rst, uint8_
    return return_value;
 }
 
-void opentcp_reset() {
+void opentcp_reset(void) {
    tcp_change_state(TCP_STATE_CLOSED);
    tcp_vars.mySeqNum            = TCP_INITIAL_SEQNUM; 
    tcp_vars.hisNextSeqNum       = 0;
diff --git a/openstack/04-TRAN/openudp.c b/openstack/04-TRAN/openudp.c
index c886375..81aa68e 100644
--- a/openstack/04-TRAN/openudp.c
+++ b/openstack/04-TRAN/openudp.c
@@ -16,7 +16,7 @@
 
 //=========================== public ==========================================
 
-void openudp_init() {
+void openudp_init(void) {
 }
 
 owerror_t openudp_send(OpenQueueEntry_t* msg) {
@@ -125,7 +125,7 @@ void openudp_receive(OpenQueueEntry_t* msg) {
    }
 }
 
-bool openudp_debugPrint() {
+bool openudp_debugPrint(void) {
    return FALSE;
 }
 
diff --git a/openstack/cross-layers/idmanager.c b/openstack/cross-layers/idmanager.c
index 560fee0..e04aaa2 100644
--- a/openstack/cross-layers/idmanager.c
+++ b/openstack/cross-layers/idmanager.c
@@ -14,7 +14,7 @@ idmanager_vars_t idmanager_vars;
 
 //=========================== public ==========================================
 
-void idmanager_init() {
+void idmanager_init(void) {
    
    // reset local variables
    memset(&idmanager_vars, 0, sizeof(idmanager_vars_t));
@@ -54,7 +54,7 @@ void idmanager_init() {
    packetfunctions_mac64bToMac16b(&idmanager_vars.my64bID,&idmanager_vars.my16bID);
 }
 
-bool idmanager_getIsDAGroot() {
+bool idmanager_getIsDAGroot(void) {
    bool res;
    INTERRUPT_DECLARATION();
    
@@ -173,7 +173,7 @@ bool idmanager_isMyAddress(open_addr_t* addr) {
    }
 }
 
-void idmanager_triggerAboutRoot() {
+void idmanager_triggerAboutRoot(void) {
    uint8_t         number_bytes_from_input_buffer;
    uint8_t         input_buffer[9];
    open_addr_t     myPrefix;
@@ -232,7 +232,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_id() {
+bool debugPrint_id(void) {
    debugIDManagerEntry_t output;
    
    output.isDAGroot = idmanager_vars.isDAGroot;
diff --git a/openstack/cross-layers/openqueue.c b/openstack/cross-layers/openqueue.c
index d901da0..162188d 100644
--- a/openstack/cross-layers/openqueue.c
+++ b/openstack/cross-layers/openqueue.c
@@ -20,7 +20,7 @@ void openqueue_reset_entry(OpenQueueEntry_t* entry);
 /**
 \brief Initialize this module.
 */
-void openqueue_init() {
+void openqueue_init(void) {
    uint8_t i;
    for (i=0;i<QUEUELENGTH;i++){
       openqueue_reset_entry(&(openqueue_vars.queue[i]));
@@ -35,7 +35,7 @@ status information about several modules in the OpenWSN stack.
 
 \returns TRUE if this function printed something, FALSE otherwise.
 */
-bool debugPrint_queue() {
+bool debugPrint_queue(void) {
    debugOpenQueueEntry_t output[QUEUELENGTH];
    uint8_t i;
    for (i=0;i<QUEUELENGTH;i++) {
@@ -156,7 +156,7 @@ void openqueue_removeAllOwnedBy(uint8_t owner) {
 
 //======= called by RES
 
-OpenQueueEntry_t* openqueue_sixtopGetSentPacket() {
+OpenQueueEntry_t* openqueue_sixtopGetSentPacket(void) {
    uint8_t i;
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
@@ -171,7 +171,7 @@ OpenQueueEntry_t* openqueue_sixtopGetSentPacket() {
    return NULL;
 }
 
-OpenQueueEntry_t* openqueue_sixtopGetReceivedPacket() {
+OpenQueueEntry_t* openqueue_sixtopGetReceivedPacket(void) {
    uint8_t i;
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
@@ -222,7 +222,7 @@ OpenQueueEntry_t* openqueue_macGetDataPacket(open_addr_t* toNeighbor) {
    return NULL;
 }
 
-OpenQueueEntry_t* openqueue_macGetEBPacket() {
+OpenQueueEntry_t* openqueue_macGetEBPacket(void) {
    uint8_t i;
    INTERRUPT_DECLARATION();
    DISABLE_INTERRUPTS();
diff --git a/openstack/cross-layers/openrandom.c b/openstack/cross-layers/openrandom.c
index ca25b09..8ddcd78 100644
--- a/openstack/cross-layers/openrandom.c
+++ b/openstack/cross-layers/openrandom.c
@@ -10,14 +10,14 @@ random_vars_t random_vars;
 
 //=========================== public ==========================================
 
-void openrandom_init() {
+void openrandom_init(void) {
    // seed the random number generator with the last 2 bytes of the MAC address
    random_vars.shift_reg  = 0;
    random_vars.shift_reg += idmanager_getMyID(ADDR_16B)->addr_16b[0]*256;
    random_vars.shift_reg += idmanager_getMyID(ADDR_16B)->addr_16b[1];
 }
 
-uint16_t openrandom_get16b() {
+uint16_t openrandom_get16b(void) {
    uint8_t  i;
    uint16_t random_value;
    random_value = 0;
-- 
2.4.5

